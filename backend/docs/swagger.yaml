basePath: /
definitions:
  dto.Company:
    properties:
      description:
        type: string
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      positions:
        items:
          type: string
        type: array
    type: object
  dto.Employee:
    properties:
      active_projects_count:
        type: integer
      company_id:
        type: integer
      id:
        type: integer
      image:
        type: string
      mail:
        type: string
      name:
        type: string
      overdue_projects_count:
        type: integer
      position:
        type: string
      rating:
        type: number
      total_projects_count:
        type: integer
    type: object
  dto.Project:
    properties:
      company_id:
        type: integer
      complexity:
        type: integer
      current_stage:
        type: integer
      deadline:
        type: string
      description:
        type: string
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      stages:
        items:
          type: string
        type: array
      status:
        type: integer
    type: object
host: localhost:8000
info:
  contact: {}
  description: Web application for automatic compilation of project teams
  title: Manager API
  version: "1.0"
paths:
  /api/companies:
    post:
      consumes:
      - application/json
      description: Создает новую компанию с заданными данными.
      parameters:
      - description: Данные компании
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/dto.Company'
      produces:
      - application/json
      responses:
        "200":
          description: Успешно создана компания
          schema:
            $ref: '#/definitions/dto.Company'
        "400":
          description: Ошибка при обработке запроса
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Создает новую компанию
      tags:
      - Company
    put:
      consumes:
      - application/json
      description: Обновляет информацию о компании с указанным ID новыми данными.
      parameters:
      - description: ID компании
        in: path
        name: id
        required: true
        type: integer
      - description: Новые данные компании
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/dto.Company'
      produces:
      - application/json
      responses:
        "200":
          description: Успешно обновлена компания
          schema:
            $ref: '#/definitions/dto.Company'
        "400":
          description: Ошибка при обработке запроса
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Обновляет информацию о компании
      tags:
      - Company
  /api/companies/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет компанию с указанным ID.
      parameters:
      - description: ID компании
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Успешное удаление компании
          schema:
            type: string
        "400":
          description: Ошибка при обработке запроса
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Удаляет компанию по ID
      tags:
      - Company
    get:
      consumes:
      - application/json
      description: Возвращает информацию о компании по указанному ID.
      parameters:
      - description: ID компании
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Успешно получена компания
          schema:
            $ref: '#/definitions/dto.Company'
        "400":
          description: Ошибка при обработке запроса
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Возвращает информацию о компании по ID
      tags:
      - Company
  /api/companies/employees:
    get:
      consumes:
      - application/json
      description: Возвращает всех сотрудников компании по ID компании из контекста.
      produces:
      - application/json
      responses:
        "200":
          description: Успешно получены сотрудники компании
          schema:
            items:
              $ref: '#/definitions/dto.Employee'
            type: array
        "404":
          description: Компания не найдена
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Возвращает всех сотрудников компании по ID компании из контекста
      tags:
      - Company
  /api/companies/projects:
    get:
      consumes:
      - application/json
      description: Возвращает все проекты компании по ID компании из контекста.
      produces:
      - application/json
      responses:
        "200":
          description: Успешно получены проекты компании
          schema:
            items:
              $ref: '#/definitions/dto.Project'
            type: array
        "404":
          description: Компания не найдена
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Возвращает все проекты компании по ID компании из контекста
      tags:
      - Company
  /api/employees:
    post:
      consumes:
      - application/json
      description: Создает нового сотрудника с заданными данными.
      parameters:
      - description: Данные сотрудника
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/dto.Employee'
      produces:
      - application/json
      responses:
        "200":
          description: Успешно создан сотрудник
          schema:
            $ref: '#/definitions/dto.Employee'
        "400":
          description: Ошибка при обработке запроса
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Создает нового сотрудника
      tags:
      - Employee
    put:
      consumes:
      - application/json
      description: Обновляет информацию о сотруднике с указанным ID новыми данными.
      parameters:
      - description: ID сотрудника
        in: path
        name: id
        required: true
        type: integer
      - description: Новые данные сотрудника
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/dto.Employee'
      produces:
      - application/json
      responses:
        "200":
          description: Успешно обновлен сотрудник
          schema:
            $ref: '#/definitions/dto.Employee'
        "400":
          description: Ошибка при обработке запроса
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Обновляет информацию о сотруднике
      tags:
      - Employee
  /api/employees/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет сотрудника с указанным ID.
      parameters:
      - description: ID сотрудника
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Успешное удаление сотрудника
          schema:
            type: string
        "400":
          description: Ошибка при обработке запроса
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Удаляет сотрудника по ID
      tags:
      - Employee
    get:
      consumes:
      - application/json
      description: Возвращает информацию о сотруднике по указанному ID.
      parameters:
      - description: ID сотрудника
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Успешно получен сотрудник
          schema:
            $ref: '#/definitions/dto.Employee'
        "400":
          description: Ошибка при обработке запроса
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Возвращает информацию о сотруднике по ID
      tags:
      - Employee
  /api/employees/{id}/projects:
    get:
      consumes:
      - application/json
      description: Возвращает проекты сотрудника по его ID.
      parameters:
      - description: ID сотрудника
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Успешно получены проекты
          schema:
            items:
              $ref: '#/definitions/dto.Project'
            type: array
        "400":
          description: Ошибка при обработке запроса
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Возвращает проекты сотрудника по его ID.
      tags:
      - Employee
  /api/projects:
    post:
      consumes:
      - application/json
      description: Создает новый проект с заданными данными.
      parameters:
      - description: Данные проекта
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/dto.Project'
      produces:
      - application/json
      responses:
        "200":
          description: Успешно создан проект
          schema:
            $ref: '#/definitions/dto.Project'
        "400":
          description: Ошибка при обработке запроса
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Создает новый проект
      tags:
      - Project
    put:
      consumes:
      - application/json
      description: Обновляет информацию о проекте с указанным ID новыми данными.
      parameters:
      - description: ID проекта
        in: path
        name: id
        required: true
        type: integer
      - description: Новые данные проекта
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/dto.Project'
      produces:
      - application/json
      responses:
        "200":
          description: Успешно обновлен проект
          schema:
            $ref: '#/definitions/dto.Project'
        "400":
          description: Ошибка при обработке запроса
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Обновляет информацию о проекте
      tags:
      - Project
  /api/projects/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет проект с указанным ID.
      parameters:
      - description: ID проекта
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Успешное удаление проекта
          schema:
            type: string
        "400":
          description: Ошибка при обработке запроса
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Удаляет проект по ID
      tags:
      - Project
    get:
      consumes:
      - application/json
      description: Возвращает информацию о проекте по указанному ID.
      parameters:
      - description: ID проекта
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Успешно получен проект
          schema:
            $ref: '#/definitions/dto.Project'
        "400":
          description: Ошибка при обработке запроса
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Возвращает информацию о проекте по ID
      tags:
      - Project
  /api/projects/{id}/employees:
    get:
      consumes:
      - application/json
      description: Возвращает сотрудников проекта по ID.
      parameters:
      - description: ID проекта
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Успешно получены сотрудники
          schema:
            items:
              $ref: '#/definitions/dto.Employee'
            type: array
        "400":
          description: Ошибка при обработке запроса
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Возвращает сотрудников проекта по ID
      tags:
      - Project
swagger: "2.0"
